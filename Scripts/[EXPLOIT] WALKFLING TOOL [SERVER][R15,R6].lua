wait("Walkfling tool toogle by Nineteen_DEV")

local Act = false

local Player = game.Players.LocalPlayer

function Character() : Model
	return Player.Character or Player.CharacterAdded:Wait()
end

function Humanoid() : Humanoid
	return Character():FindFirstChildWhichIsA("Humanoid")
end

local StarterGui = game:GetService("StarterGui")

function GetTool() : Tool
	local Tool = Instance.new("Tool")
	Tool.Name = 'WalkFling (OFF)'
	Tool.RequiresHandle = false
	Tool.Parent = game.Players.LocalPlayer.Backpack
	return Tool
end

local Tool = GetTool()

function getRoot(Char : Model)
	
	return Char:FindFirstChildWhichIsA("Humanoid").RootPart
	
end

function Fling()
	
	Act = not Act
	
	if Act then
		Tool.Name = "WalkFling (ON)" else 	Tool.Name = "WalkFling (OFF)"
	end
		
	local RunService = game:GetService("RunService")
	local speaker = Player
		
	repeat RunService.Heartbeat:Wait()
		local character = speaker.Character
		local root = getRoot(character)
		local vel, movel = nil, 0.1

		while not (character and character.Parent and root and root.Parent) do
			RunService.Heartbeat:Wait()
			character = speaker.Character
			root = getRoot(character)
		end

		vel = root.Velocity
		root.Velocity = vel * 10000 + Vector3.new(0, 10000, 0)

		RunService.RenderStepped:Wait()
		if character and character.Parent and root and root.Parent then
			root.Velocity = vel
		end

		RunService.Stepped:Wait()
		if character and character.Parent and root and root.Parent then
			root.Velocity = vel + Vector3.new(0, movel, 0)
			movel = movel * -1
		end
	until Act == false
end

Tool.Activated:Connect(function()

	Fling()

end)

function Died()
Humanoid().Died:Once(function()
	Player.CharacterAdded:Wait()
	Tool = GetTool()
	
	if Act == true then
		Fling()
	end
	
	Tool.Activated:Connect(function()

		Fling()

	end)
       Died()
end)
end

Died()


